////////////////////////////////////////////
//                                        //
//  THIS FILE IS AUTOMATICALLY GENERATED  //
//     BY generate.py, DO NOT EDIT!       //
//                                        //
////////////////////////////////////////////
`include "src/defines.v"
module ieee_adder(add_sub_bit,inputA,inputB,clock_in,outputC);
	input  add_sub_bit;
	input `WIDTH_NUMBER inputA;
	input `WIDTH_NUMBER inputB;
	input  clock_in;
	output `WIDTH_NUMBER outputC;
	/////////////
	// STAGE 1 //
	/////////////
	//Outputs of module 'compare' with instance 'compare'
	wire  s1o_expA_bigger_expB;
	wire  s1o_inputA_bigger_inputB;
	wire `WIDTH_EXPO s1o_shift_amount;
	//Outputs of module 'prepare_input' with instance 'prepare_inputB'
	wire  s1o_signB;
	wire `WIDTH_EXPO s1o_exponentB;
	wire `WIDTH_SIGNIF s1o_significandB;
	//Outputs of module 'prepare_input' with instance 'prepare_inputA'
	wire  s1o_signA;
	wire `WIDTH_EXPO s1o_exponentA;
	wire `WIDTH_SIGNIF s1o_significandA;
	//Outputs of module 'stage3' with instance 'stage3'
	wire `WIDTH_NUMBER s1o_outputC;
	//Calling instance 'compare'
	ieee_adder_compare S1_ieee_adder_compare (
		/*input*/.exponentA(s1o_exponentA),
		/*input*/.exponentB(s1o_exponentB),
		/*input*/.significandA(s1o_significandA),
		/*input*/.significandB(s1o_significandB),
		/*output*/.expA_bigger_expB(s1o_expA_bigger_expB),
		/*output*/.inputA_bigger_inputB(s1o_inputA_bigger_inputB),
		/*output*/.shift_amount(s1o_shift_amount)
	);
	//Calling instance 'prepare_inputB'
	ieee_adder_prepare_input S1_ieee_adder_prepare_inputB (
		/*input*/.add_sub_bit(add_sub_bit),
		/*input*/.number(inputB),
		/*output*/.sign(s1o_signB),
		/*output*/.exponent(s1o_exponentB),
		/*output*/.significand(s1o_significandB)
	);
	//Calling instance 'prepare_inputA'
	ieee_adder_prepare_input S1_ieee_adder_prepare_inputA (
		/*input*/.add_sub_bit(add_sub_bit),
		/*input*/.number(inputA),
		/*output*/.sign(s1o_signA),
		/*output*/.exponent(s1o_exponentA),
		/*output*/.significand(s1o_significandA)
	);
	//Calling instance 'stage3'
	ieee_adder_stage3 S1_ieee_adder_stage3 (
		/*input*/.significandA(s1o_significandA),
		/*input*/.significandB(s1o_significandB),
		/*input*/.shift_amount(s1o_shift_amount),
		/*input*/.exponentA(s1o_exponentA),
		/*input*/.exponentB(s1o_exponentB),
		/*input*/.expA_bigger_expB(s1o_expA_bigger_expB),
		/*output*/.outputC(s1o_outputC)
	);
	//Connect stage 1 to pipeline output
	assign outputC = s1o_outputC;
endmodule
